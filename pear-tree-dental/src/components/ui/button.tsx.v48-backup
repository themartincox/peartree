"use client"


"use client";

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"
import { motion, AnimatePresence } from "framer-motion"
import { Loader2 } from "lucide-react"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 relative overflow-hidden",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow-md hover:shadow-lg hover:shadow-primary/25",
        destructive:
          "bg-destructive text-destructive-foreground shadow-md hover:shadow-lg hover:shadow-destructive/25",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground hover:shadow-md",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:shadow-md",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

// Animation variants for different states
const buttonAnimations = {
  initial: { scale: 1 },
  hover: {
    scale: 1.02,
    transition: {
      duration: 0.2,
      ease: [0.4, 0, 0.2, 1]
    }
  },
  tap: {
    scale: 0.98,
    transition: {
      duration: 0.1,
      ease: [0.4, 0, 0.2, 1]
    }
  }
}

const iconAnimations = {
  initial: { x: 0, rotate: 0 },
  hover: {
    x: 2,
    transition: {
      duration: 0.2,
      ease: [0.4, 0, 0.2, 1]
    }
  }
}

const rippleAnimations = {
  initial: { scale: 0, opacity: 0.6 },
  animate: {
    scale: 4,
    opacity: 0,
    transition: {
      duration: 0.6,
      ease: [0.4, 0, 0.2, 1]
    }
  }
}

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
  loading?: boolean
  withRipple?: boolean
  withIconAnimation?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, loading = false, withRipple = false, withIconAnimation = true, children, onClick, ...props }, ref) => {
    const [ripples, setRipples] = React.useState<Array<{ id: number; x: number; y: number }>>([])
    const [rippleId, setRippleId] = React.useState(0)

    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {
      if (withRipple && !loading) {
        const rect = e.currentTarget.getBoundingClientRect()
        const size = Math.max(rect.width, rect.height)
        const x = e.clientX - rect.left - size / 2
        const y = e.clientY - rect.top - size / 2

        const newRipple = { id: rippleId, x, y }
        setRipples(prev => [...prev, newRipple])
        setRippleId(prev => prev + 1)

        setTimeout(() => {
          setRipples(prev => prev.filter(ripple => ripple.id !== newRipple.id))
        }, 600)
      }

      if (onClick && !loading) {
        onClick(e)
      }
    }

    const buttonContent = React.useMemo(() => {
      if (loading) {
        return (
          <>
            <motion.div
              animate={{ rotate: 360 }}
              transition={{ duration: 1, repeat: Number.POSITIVE_INFINITY, ease: "linear" }}
            >
              <Loader2 className="h-4 w-4" />
            </motion.div>
            <span>Loading...</span>
          </>
        )
      }

      // Clone children to add icon animations
      if (withIconAnimation && React.Children.count(children) > 1) {
        return React.Children.map(children, (child, index) => {
          if (React.isValidElement(child) && child.type && typeof child.type === 'function') {
            // Check if this is likely an icon (has displayName or is from lucide-react)
            const isIcon = child.props.className?.includes('w-') && child.props.className?.includes('h-')

            if (isIcon && index === React.Children.count(children) - 1) {
              // Animate the last icon (usually arrow icons)
              return (
                <motion.div
                  key={index}
                  variants={iconAnimations}
                  className="inline-flex"
                >
                  {child}
                </motion.div>
              )
            }
          }
          return child
        })
      }

      return children
    }, [children, loading, withIconAnimation])

    if (asChild) {
      return (
        <Slot
          className={cn(buttonVariants({ variant, size, className }))}
          ref={ref}
          {...props}
        >
          {buttonContent}
        </Slot>
      )
    }

    return (
      <motion.button
        ref={ref}
        className={cn(buttonVariants({ variant, size, className }), loading && "cursor-not-allowed")}
        variants={buttonAnimations}
        initial="initial"
        whileHover={!loading ? "hover" : "initial"}
        whileTap={!loading ? "tap" : "initial"}
        onClick={handleClick}
        disabled={loading || props.disabled}
        {...props}
      >
        {/* Ripple effects */}
        <AnimatePresence>
          {ripples.map((ripple) => (
            <motion.span
              key={ripple.id}
              className="absolute rounded-full bg-white/30 pointer-events-none"
              style={{
                left: ripple.x,
                top: ripple.y,
                width: 20,
                height: 20,
              }}
              variants={rippleAnimations}
              initial="initial"
              animate="animate"
              exit="initial"
            />
          ))}
        </AnimatePresence>

        {/* Button content */}
        <motion.div
          className="flex items-center gap-2"
          variants={withIconAnimation ? { hover: { transition: { staggerChildren: 0.05 } } } : undefined}
        >
          {buttonContent}
        </motion.div>
      </motion.button>
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }
